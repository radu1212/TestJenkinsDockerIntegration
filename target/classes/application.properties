##Chose any port between 7000-9000. It should work.
server.port=7799
##Chose a context root path for your URLs

##spring.output.ansi.enabled=ALWAYS
##spring.datasource.driver-class-name=org.postgresql.Driver
##spring.datasource.url=jdbc:postgresql://localhost/SpringBoot
##spring.datasource.username=postgres
##spring.datasource.password=postgres
##spring.jpa.hibernate.ddl-auto=update
##spring.jpa.properties.hibernate.show_sql=true
##spring.jpa.properties.hibernate.use_sql_comments=true
##spring.jpa.properties.hibernate.format_sql=true
##spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

spring.datasource.url=jdbc:sqlserver://localhost;databaseName=testDB
spring.datasource.username=radu
spring.datasource.password=radu
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.jpa.show-sql=true
spring.jpa.database-platform=org.hibernate.dialect.SQLServer2012Dialect
spring.jpa.hibernate.ddl-auto = update


security.oauth2.client.client-id= 300364819985-77onmsdtun1b2biscpgbbd9u7c7p95du.apps.googleusercontent.com
security.oauth2.client.client-secret= LAJa0Wq8TLGAMe9atJZQ_kvh
security.oauth2.client.access-token-uri= https://www.googleapis.com/oauth2/v3/token
security.oauth2.client.user-authorization-uri= https://accounts.google.com/o/oauth2/auth
security.oauth2.client.token-name= oauth_token
security.oauth2.client.authentication-scheme= query
security.oauth2.client.client-authentication-scheme= form
security.oauth2.client.scope= profile email

security.oauth2.resource.user-info-uri= https://www.googleapis.com/userinfo/v2/me
security.oauth2.resource.prefer-token-info= false